#!/usr/bin/env bash
# Generated by: needle
#    Date Time: 01/11/18 04:59:42 PM
#  Description: Check status to validate cases for smoke

# Source out required files
source $NS_WDIR/lib/utilities.sh
source $NS_WDIR/lib/helpers.sh
source $NS_WDIR/lib/smoke.properties

TEST_RUN_PATH="$NS_WDIR/logs/TR$(get_test_idx)"                                                
PARTITION_PATH="$TEST_RUN_PATH/$(get_test_partition)"                                          
RAW_DATA_FILE="$PARTITION_PATH/nd/raw_data/NodeJS_CAV-QA-30-28_cav-nsecom-01.txt"                           
gdf_file="$(ls $NS_WDIR/logs/TR$(get_test_idx)/$(get_test_partition)/testrun.gdf* | tail -1)"  
prc_file="$NS_WDIR/logs/TR$(get_test_idx)/$(get_test_partition)/reports/csv/prc.csv"           

function main() {
	case $(get_test_name) in
    "NETJS-011-001") handle_netjs_011_001_case ;;
    "NETJS-011-002") handle_netjs_011_002_case ;;
    "NETJS-011-003") handle_netjs_011_003_case ;;
    "NETJS-011-004") handle_netjs_011_004_case ;;
    "NETJS-011-005") handle_netjs_011_005_case ;;
    "NETJS-011-006") handle_netjs_011_006_case ;;
    "NETJS-011-007") handle_netjs_011_007_case ;;
# End case def
		*) handle_unknown_case ;;
		?) handle_unknown_case ;;
  esac
}

# category id
function log_status_int() {
	local _status="$1"
	local why="$2"
	# Setting product id and category id as 1000 in case $productid or $categoryid may be empty
	# Set the productid, categoryid in smoke/etc/smoke.properties to
	# override this behaviour
	local productid=${productid:-1000}
	local categoryid=${categoryid:-1000}
	log_status_and_exit ${productid} ${categoryid} ${_status} "${why}"
}


function handle_unknown_case() {
	error "Testcase name not found"
	log_status_int "FAIL" "Testcase name not found"
}
function handle_netjs_011_001_case() {
    if [ ! -s $RAW_DATA_FILE ];then
       log_status_int "FAIL" "Rawdata file having zero size: ${RAW_DATA_FILE}"
    fi

    local redisMID=$(grep "^5,Redis_localhost_6379" $RAW_DATA_FILE | cut -d ',' -f3)
    local fpid2=$(grep "^2," ${RAW_DATA_FILE} |grep "/nsecomm/redis" |cut -d ',' -f 2 |head -1)
    fpid4=$(grep "^4,$fpid2," $RAW_DATA_FILE | cut -d ',' -f 7 |egrep -o "T[0-9]+:[0-9]+:[0-9]+:16:[0-9]+"|cut -d ':' -f4)
    redisRec=$(cut -d ' ' -f1 $fpid4)
    local redisTRec=$(egrep -o "T[0-9]+:$redisMID:[0-9]+:16:[0-9]+" $RAW_DATA_FILE | cut -d ':' -f2)
    #if [ $redisRec -eq 16 ] && [ $redisTRec -eq $redisMID ];then
    if [ $redisRec -ne 16 ];then
       log_status_int "FAIL" "Redis call is not captured"
    fi
   if [ $redisTRec -ne $redisMID ];then
       log_status_int "FAIL" "Redis call is not captured"
   fi
   
       log_status_int "PASS" "Redis call captured"
}
function handle_netjs_011_002_case() {
    if [ ! -s $RAW_DATA_FILE ];then
       log_status_int "FAIL" "Rawdata file having zero size: ${RAW_DATA_FILE}"
    fi   
          
    local mongoMID=$(grep "^5,MONGO_localhost_27017" $RAW_DATA_FILE | cut -d ',' -f3)
    local fpid2=$(grep "^2," ${RAW_DATA_FILE} |grep "/nsecomm/mongodb" |cut -d ',' -f 2 |head -1)
    fpid4=$(grep "^4,$fpid2," $RAW_DATA_FILE | cut -d ',' -f 7 |egrep -o "T[0-9]+:[0-9]+:[0-9]+:15:[0-9]+"|cut -d ':' -f4)
    mongoRec=$(cut -d ' ' -f1 $fpid4)
    local mongoTRec=$(egrep -o "T[0-9]+:$mongoMID:[0-9]+:15:[0-9]+" $RAW_DATA_FILE | cut -d ':' -f2)
    if [ $mongoRec -ne 15 ];then
       log_status_int "FAIL" "Mongodb call is not captured"
    fi
   if [ $mongoTRec -ne $mongoMID ];then
       log_status_int "FAIL" "Mongodb call is not captured"
   fi
    
       log_status_int "PASS" "Mongodb call captured"
}
function handle_netjs_011_003_case() {
    if [ ! -s $RAW_DATA_FILE ];then 
       log_status_int "FAIL" "Rawdata file having zero size: ${RAW_DATA_FILE}"
    fi   
             
    local zooMID=$(grep "^5,Zookeeper_localhost_2181" $RAW_DATA_FILE | cut -d ',' -f3)
    local fpid2=$(grep "^2," ${RAW_DATA_FILE} |grep "/nsecomm/zoo" |cut -d ',' -f 2 |head -1)
    fpid4=$(grep "^4,$fpid2," $RAW_DATA_FILE | cut -d ',' -f 7 |egrep -o "T[0-9]+:[0-9]+:[0-9]+:1:[0-9]+"|cut -d ':' -f4)
    zooRec=$(cut -d ' ' -f1 $fpid4)
    local zooTRec=$(egrep -o "T[0-9]+:$zooMID:[0-9]+:1:[0-9]+" $RAW_DATA_FILE | cut -d ':' -f2)
    if [ $zooRec -ne 1 ];then
       log_status_int "FAIL" "Zookeeper call is not captured"
    fi 
   if [ $zooTRec -ne $zooMID ];then
       log_status_int "FAIL" "Zookeeper call is not captured"
   fi

       log_status_int "PASS" "Zookeeper call captured"
}

function handle_netjs_011_004_case() {
    if [ ! -s $RAW_DATA_FILE ];then
       log_status_int "FAIL" "Rawdata file having zero size: ${RAW_DATA_FILE}"
    fi

    local mtMID=$(grep "^5,HTTP_www.gmail.com" $RAW_DATA_FILE | cut -d ',' -f3)
    local fpid2=$(grep "^2," ${RAW_DATA_FILE} |grep "/nsecomm/manyTier" |cut -d ',' -f 2 |head -1)
    local fpid4=$(grep "^4,$fpid2," $RAW_DATA_FILE | cut -d ',' -f 7 |egrep -o "T[0-9]+:[0-9]+:[0-9]+:1:[0-9]+"|cut -d ':' -f4)
    mt=$(cut -d ' ' -f1 $fpid4)
    local mtRec=$(egrep -o "T[0-9]+:$mtMID:[0-9]+:1:[0-9]+" $RAW_DATA_FILE | cut -d ':' -f2)
    if [ $mt -ne 1 ];then
       log_status_int "FAIL" "HTTP call is not captured"
    fi
   if [ $mtRec -ne $mtMID];then
       log_status_int "FAIL" "HTTP call is not captured"
   fi

       log_status_int "PASS" "HTTP call is captured"
}
function handle_netjs_011_005_case() {
    if [ ! -s $RAW_DATA_FILE ];then
       log_status_int "FAIL" "Rawdata file having zero size: ${RAW_DATA_FILE}"
    fi   
          
    local memID=$(grep "^5,MemCache_localhost_11211" $RAW_DATA_FILE | cut -d ',' -f3)
    local fpid2=$(grep "^2," ${RAW_DATA_FILE} |grep "/nsecomm/memcache" |cut -d ',' -f 2 |head -1)
    local fpid4=$(grep "^4,$fpid2," $RAW_DATA_FILE | cut -d ',' -f 7 |egrep -o "T[0-9]+:[0-9]+:[0-9]+:5:[0-9]+"|cut -d ':' -f4)
    mem=$(cut -d ' ' -f1 $fpid4)
    local memRec=$(egrep -o "T[0-9]+:$memMID:[0-9]+:5:[0-9]+" $RAW_DATA_FILE | cut -d ':' -f2)
    if [ -z $mem ];then
       log_status_int "FAIL" "Memcache call is not captured"
    fi 
   if [ $memRec -ne $memMID ];then
       log_status_int "FAIL" "Memcache call is not captured"
   fi
       log_status_int "PASS" "Memcache call is captured"
}  

main
